# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config
, lib
, modulesPath
, ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd.availableKernelModules = [ "nvme" "xhci_pci" "uas" "usbhid" "usb_storage" "sd_mod" "sdhci_pci" ];
    initrd.kernelModules = [ "dm-snapshot" ];
    kernelModules = [ "kvm-amd" ];
    extraModulePackages = [ ];
  };

  hardware = {
    nvidia.open = false;
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/250192ad-0988-4002-8092-96a424823d9f";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async,subvol=@" ];
    };

    "/nix" = {
      device = "/dev/disk/by-uuid/250192ad-0988-4002-8092-96a424823d9f";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async,subvol=@nix" ];
    };

    "/root" = {
      device = "/dev/disk/by-uuid/250192ad-0988-4002-8092-96a424823d9f";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async,subvol=@root" ];
    };

    "/srv" = {
      device = "/dev/disk/by-uuid/250192ad-0988-4002-8092-96a424823d9f";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async,subvol=@srv" ];
    };

    "/var/cache" = {
      device = "/dev/disk/by-uuid/250192ad-0988-4002-8092-96a424823d9f";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async,subvol=@cache" ];
    };

    "/var/tmp" = {
      device = "/dev/disk/by-uuid/250192ad-0988-4002-8092-96a424823d9f";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async,subvol=@tmp" ];
    };

    "/var/log" = {
      device = "/dev/disk/by-uuid/250192ad-0988-4002-8092-96a424823d9f";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async,subvol=@log" ];
    };

    "/var/lib/docker" = {
      device = "/dev/disk/by-uuid/250192ad-0988-4002-8092-96a424823d9f";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async,subvol=@docker" ];
    };

    "/var/lib/libvirt" = {
      device = "/dev/disk/by-uuid/250192ad-0988-4002-8092-96a424823d9f";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async,subvol=@libvirt" ];
    };

    "/home" = {
      device = "/dev/vg/home";
      fsType = "btrfs";
      options = [ "noatime,space_cache=v2,compress=lzo,discard=async" ];
    };

    "/media" = {
      device = "/dev/disk/by-uuid/71ef4372-97eb-4e7e-b85e-110213358745";
      fsType = "ext4";
    };

    "/boot/efi" = {
      device = "/dev/disk/by-uuid/7725-C16F";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/d0060720-29c2-4c26-9dee-5bdfdddbdb3b"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

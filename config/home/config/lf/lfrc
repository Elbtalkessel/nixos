set ratios 1:2:3

# Basic vars
set shell bash
set previewer ~/.config/lf/preview
set shellopts '-eu'
set ifs "\n"
set scrolloff 10

# cmds/functions
cmd open ${{
    case $(file --mime-type $f -b) in
      text/*) $EDITOR $fx;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd delete ${{
  set -f
  printf "%s\n\t" "$fx"
  printf "delete?[y/N] "
  read ans
  [ $ans = "y" ] && echo $fx | xargs -I'{}' rm -r '{}'
}}

cmd moveto ${{
  set -f
  clear; echo "Move to where?"
  dest="$(find $OLDPWD -type d -print 2>/dev/null | fzf)" &&
  eval mv -iv $fx $dest &&
  notify-send "File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
  set -f
  clear; echo "Copy to where?"
  dest="$(find $OLDPWD -type d -print 2>/dev/null | fzf)" &&
  eval cp -ivr $fx $dest &&
  notify-send "File(s) copied." "File(s) copies to $dest."
}}

# Bindings
# Find and open a file or directory
map f ${{
  set -f
  path=$(find $OLDPWD -print 2>/dev/null | fzf)
  notify-send 'test' "$path"
  if [ $(file --mime-type "$path" -b) == "inode/directory" ]; then
    lf -remote "send $id cd $path"
  else
    lf -remote "send $id open $path"
  fi
}}

map g top
map d delete
map c copyto
map m moveto
map a ${{
  set -f
  clear; read -p "Create a directory or file in $PWD, name? " path
  mkdir -p $(dirname $path)
  touch $path
  lf -remote "send $id select $path"
}}
map r push :rename<space>
map <enter> shell

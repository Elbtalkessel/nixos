# Bigger third pane to give file preview more space.
set ratios 1:2:3

# Basic vars
set shell bash
set previewer ~/.config/lf/preview
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons true
set hidden true

# cmds/functions
cmd open ${{
  # inode/x-empty a file without an extension and with no content
  case $(file --mime-type $f -b) in
    text/*|application/json|inode/x-empty) $EDITOR $fx;;
  esac
}}

# Enhances the builtin rename command checking if specified node exists before renaming.
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

# Bindings.
# Search and naviagtion is done recursively from a directory where LF has been started (OLDPWD).
# fuzzy file search. Default is builtin find command, but I don't find it useful :)
map f ${{
  set -f
  path=$(fzf --walker-root $OLDPWD --walker-skip=.git,.devenv,.venv)
  lf -remote "send $id select $path"
}}

# remaps cut from `d` to `x`, easier to remember.
map d delete
map <delete> delete
map x cut

# remaps `c` - clear to fuzzy copy, and sets clear on `e` (bc empty).
map c ${{
  dest="$(find $OLDPWD -type d -print 2>/dev/null | fzf)" &&
  eval cp -ir $fx $dest
}}
# clears y (yank) or cut (x) selection.
map e clear

# m - move a file / directory or a selection to a directory
map m ${{
  dest="$(find $OLDPWD -type d -print 2>/dev/null | fzf)" &&
  eval mv -i $fx $dest
}}

# a - append, creates a file or a directory if path ends with slash.
# % - run shell command inside UI.
map a %{{
  set -f
  printf " file name or directory path: "
  read path
  if [[ $path == */ ]]; then
    mkdir -p $path
  else
    mkdir -p $(dirname $path)
    touch $path
  fi
  lf -remote "send $id select $path"
}}

# navigate back up to starting directory
# & - run command asynchronously, or you will get screen flicker.
map <backspace2> &{{
  # You still can leave starting dir by pressing `h`.
  if [[ "$PWD" != "$OLDPWD" ]]; then
    lf -remote "send $id updir"
  fi
}}

map r push :rename<space>
map <enter> open
